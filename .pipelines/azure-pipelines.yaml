trigger:
- '*'

variables:
- group: Release
- name: buildConfiguration
  value: Release
- name: releaseBranchName
  value: main
- name: deploymentDefaultLocation
  value: australiasoutheast
- name: appName
  value: azsample0411

# schedules:
# - cron: '0 3 * * *'
#   displayName: 'Deploy every day at 3 A.M.'
#   branches:
#     include:
#     - release
#   always: false 

stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs: 
  - template: pipeline-templates/build.yml

- stage: 'Validate'
  displayName: 'Validate ARM templates'
  jobs: 
  - template: pipeline-templates/validate.yml

- stage: 'Dev'
  displayName: 'Deploy to the dev environment'
  dependsOn: Build
  condition: |
    and
    (
      succeeded(),
      eq(variables['Build.SourceBranchName'], variables['releaseBranchName'])
    )
  jobs:
  - job: DeployARM
    displayName: Deploy ARM
    steps:
      
    - task: AzureCLI@2
      displayName: Create Resource Group
      inputs:
        azureSubscription: $(ServiceConnectionName)
        scriptType: bash
        scriptLocation: inlineScript
        useGlobalConfig: false
        inlineScript: |
          az --version
          az group create --name $(resourceGroupName) --location $(deploymentDefaultLocation)

    - task: AzureResourceManagerTemplateDeployment@3
      displayName: Deploy ARM Template
      inputs:
        connectedServiceName: $(ServiceConnectionName)
        deploymentName: $(Build.BuildNumber)
        location: $(deploymentDefaultLocation)
        resourceGroupName: $(ResourceGroupName)
        csmFile: deploy/main.bicep
        csmParametersFile: deploy/parameters.dev.json
        overrideParameters: -appName $(appName)

  - deployment: Deploy
    dependsOn: DeployARM
    displayName: Upload Code
    pool:
      vmImage: 'ubuntu-20.04'
    condition: succeeded()
    environment: dev
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: AzureFunctionApp@1
            displayName: 'Azure App Service Deploy: function'
            inputs:
              azureSubscription: $(ServiceConnectionName)
              appName: func-$(appName)-dev
              appType: 'functionApp'
              package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'
              deploymentMethod: 'zipDeploy' 