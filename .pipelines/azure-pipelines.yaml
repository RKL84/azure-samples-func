trigger:
- '*'

variables:
- group: Release
- name: buildConfiguration
  value: Release
- name: releaseBranchName
  value: main
- name: deploymentDefaultLocation
  value: australiasoutheast
- name: appName
  value: azsample0411

# schedules:
# - cron: '0 3 * * *'
#   displayName: 'Deploy every day at 3 A.M.'
#   branches:
#     include:
#     - release
#   always: false 

stages:
  - stage: 'Build'
    displayName: 'Build'
    jobs: 
      - template: pipeline-templates/build-code.yml
      - template: pipeline-templates/build-infra.yml
        parameters:
          bicepTemplatePath: $(Build.SourcesDirectory)/deploy/main.bicep
          bicepTemplateParameterPath: $(Build.SourcesDirectory)/deploy/parameters.dev.json


  - stage: 'Dev'
    displayName: 'Deploy to the dev environment'
    dependsOn: Build
    condition: |
      and
      (
        succeeded(),
        eq(variables['Build.SourceBranchName'], variables['releaseBranchName'])
      )
    jobs:
    - job: CreateResourceGroup
      displayName: Create Resource Group
      steps:
      
      - task: AzureCLI@2
        displayName: Create Resource Group
        inputs:
          azureSubscription: $(ServiceConnectionName)
          scriptType: bash
          scriptLocation: inlineScript
          useGlobalConfig: false
          inlineScript: |
            az --version
            az group create --name $(resourceGroupName) --location $(deploymentDefaultLocation)

    - template: pipeline-templates/deploy.yml




#   #   - deployment: Deploy
#   #     dependsOn: DeployARM
#   #     displayName: Upload Code
#   #     pool:
#   #       vmImage: 'ubuntu-20.04'
#   #     condition: succeeded()
#   #     environment: dev
#   #     variables:
#   #     - group: Release
#   #     strategy:
#   #       runOnce:
#   #         deploy:
#   #           steps:
#   #           - download: current
#   #             artifact: FunctionApp
#   #           - task: AzureFunctionApp@1
#   #             displayName: 'Azure App Service Deploy: function'
#   #             inputs:
#   #               azureSubscription: $(ServiceConnectionName)
#   #               appName: func-$(appName)-dev
#   #               appType: 'functionApp'
#   #               package: '$(Pipeline.Workspace)/FunctionApp/$(buildConfiguration)/*.zip'
#   #               deploymentMethod: 'zipDeploy' 