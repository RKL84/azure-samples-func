trigger:
- '*'

variables:
- group: Release
- name: buildConfiguration
  value: Release
- name: releaseBranchName
  value: main
- name: deploymentDefaultLocation
  value: australiasoutheast
- name: appName
  value: azsample0411

# schedules:
# - cron: '0 3 * * *'
#   displayName: 'Deploy every day at 3 A.M.'
#   branches:
#     include:
#     - release
#   always: false 

stages:
  - stage: 'Build'
    displayName: 'Build'
    jobs: 
      - template: pipeline-templates/jobs.buildCode.yml
      - template: pipeline-templates/jobs.buildInfra.yml
        parameters:
          resourceGroupName: $(ResourceGroupName)
          bicepTemplateFilePath: $(Build.SourcesDirectory)/deploy/main.bicep
          templateParameterFilePath: $(Build.SourcesDirectory)/deploy/parameters.dev.json

  - stage: 'Dev'
    displayName: 'Deploy to the dev environment'
    dependsOn: Build
    condition: |
      and
      (
        succeeded(),
        eq(variables['Build.SourceBranchName'], variables['releaseBranchName'])
      )
    jobs:
    - job: CreateResourceGroup
      displayName: Create Resource Group
      steps:
      
      - task: AzureCLI@2
        displayName: Create Resource Group
        inputs:
          azureSubscription: $(ServiceConnectionName)
          scriptType: bash
          scriptLocation: inlineScript
          useGlobalConfig: false
          inlineScript: |
            az --version
            az group create --name $(ResourceGroupName) --location $(deploymentDefaultLocation)

    - template: pipeline-templates/jobs.deployInfra.yml
      parameters:
        appName: func-$(appName)-dev
        resourceGroupName: $(ResourceGroupName)
        templateFilePath: $(Pipeline.Workspace)/Bicep/main.json
        templateParameterFilePath: $(Build.SourcesDirectory)/deploy/parameters.dev.json
    
    - template: pipeline-templates/deploy-fapp.yml
      parameters:
        appName: func-$(appName)-dev
        package: '$(Pipeline.Workspace)/FunctionApp/$(buildConfiguration)/*.zip'